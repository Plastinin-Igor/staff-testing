-- direction definition

-- Drop table

-- DROP TABLE direction;

create TABLE IF NOT EXISTS direction (
	direction_id int4 NOT NULL GENERATED ALWAYS AS IDENTITY, -- Идентификатор направления
	name varchar(25) NOT NULL, -- Наименование направления
	description varchar(150) NULL, -- Описание направления
	date_begin date NOT NULL, -- Дата начала действия
	date_end date NULL, -- Дата окончания
	CONSTRAINT direction_pk PRIMARY KEY (direction_id),
	CONSTRAINT direction_uk UNIQUE (name, date_begin, date_end)
);
COMMENT ON TABLE direction IS 'Направление';

-- Column comments

COMMENT ON COLUMN direction.direction_id IS 'Идентификатор направления';
COMMENT ON COLUMN direction.name IS 'Наименование направления';
COMMENT ON COLUMN direction.description IS 'Описание направления';
COMMENT ON COLUMN direction.date_begin IS 'Дата начала действия';
COMMENT ON COLUMN direction.date_end IS 'Дата окончания';


-- themes definition

-- Drop table

-- DROP TABLE themes;

create TABLE IF NOT EXISTS themes (
	theme_id int4 NOT NULL GENERATED ALWAYS AS IDENTITY, -- Темы
	direction_id int4 NOT NULL, -- Направление
	name varchar(150) NOT NULL, -- Наименование темы
	sign_blocked bool NULL DEFAULT false, -- Признак блокировки темы
	CONSTRAINT themes_pk PRIMARY KEY (theme_id),
	CONSTRAINT themes_uk UNIQUE (direction_id, name, sign_blocked),
	CONSTRAINT themes_fk FOREIGN KEY (direction_id) REFERENCES direction(direction_id)
);
COMMENT ON TABLE themes IS 'Темы';

-- Column comments

COMMENT ON COLUMN themes.theme_id IS 'Темы';
COMMENT ON COLUMN themes.direction_id IS 'Направление';
COMMENT ON COLUMN themes.name IS 'Наименование темы';
COMMENT ON COLUMN themes.sign_blocked IS 'Признак блокировки темы';


-- questions definition

-- Drop table

-- DROP TABLE questions;

create TABLE IF NOT EXISTS questions (
	question_id int4 NOT NULL GENERATED ALWAYS AS IDENTITY, -- Идентификатор вопроса
	theme_id int4 NOT NULL, -- Тема
	cur_number int4 NOT NULL, -- Номер вопроса в теме
	contetnt varchar(450) NOT NULL, -- Содержание вопроса
	help_text varchar(450) NULL, -- Подсказка
	CONSTRAINT questions_contetnt_uk UNIQUE (theme_id, contetnt),
	CONSTRAINT questions_pk PRIMARY KEY (question_id),
	CONSTRAINT questions_uk UNIQUE (theme_id, cur_number),
	CONSTRAINT questions_fk FOREIGN KEY (theme_id) REFERENCES themes(theme_id)
);
COMMENT ON TABLE questions IS 'Вопросы';

-- Column comments

COMMENT ON COLUMN questions.question_id IS 'Идентификатор вопроса';
COMMENT ON COLUMN questions.theme_id IS 'Тема';
COMMENT ON COLUMN questions.cur_number IS 'Номер вопроса в теме';
COMMENT ON COLUMN questions.contetnt IS 'Содержание вопроса';
COMMENT ON COLUMN questions.help_text IS 'Подсказка';


-- answers definition

-- Drop table

-- DROP TABLE answers;

create TABLE IF NOT EXISTS answers (
	answer_id int4 NOT NULL GENERATED ALWAYS AS IDENTITY, -- Идентификатор
	question_id int4 NOT NULL, -- Вопрос
	content varchar(450) NOT NULL, -- Содержание ответа
	sign_right bool NOT NULL DEFAULT false, -- Признак Парвильный ответ
	CONSTRAINT answers_pk PRIMARY KEY (answer_id),
	CONSTRAINT answers_uk UNIQUE (question_id, content),
	CONSTRAINT answers_fk FOREIGN KEY (question_id) REFERENCES questions(question_id)
);
COMMENT ON TABLE answers IS 'Ответы';

-- Column comments

COMMENT ON COLUMN answers.answer_id IS 'Идентификатор';
COMMENT ON COLUMN answers.question_id IS 'Вопрос';
COMMENT ON COLUMN answers.content IS 'Содержание ответа';
COMMENT ON COLUMN answers.sign_right IS 'Признак Парвильный ответ';


create TABLE IF NOT EXISTS users (
	user_id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY, -- Уникальный идентификатор пользователя
	email varchar(50) NOT NULL, -- Адрес электронной почты
	login varchar(50) NOT NULL, -- Логин пользователя
	name varchar(150) NOT NULL, -- Имя пользователя
	birthday date NOT NULL, -- Дата рождения
	CONSTRAINT user_email_uk UNIQUE (email),
	CONSTRAINT user_login_uk UNIQUE (login),
	CONSTRAINT user_pk PRIMARY KEY (user_id)
);
comment on table users is 'Пользователи';

-- Column comments

comment on column users.user_id is 'Уникальный идентификатор пользователя';
comment on column users.email is 'Адрес электронной почты';
comment on column users.login is 'Логин пользователя';
comment on column users.name is 'Имя пользователя';
comment on column users.birthday is 'Дата рождения';


-- students definition

-- Drop table

-- DROP TABLE students;

create TABLE IF NOT EXISTS students (
	student_id int4 NOT NULL GENERATED ALWAYS AS IDENTITY, -- Идетификатор
	login varchar(50) NOT NULL, -- Логин
	full_name varchar(250) NOT NULL, -- Полное имя
	email varchar(50) NOT NULL, -- Эл.почта
	datebirth date NULL, -- Дата рождения
	gender int4 NOT NULL DEFAULT 0, -- Пол: 0-не задан; 1-муж; 2-жен
	CONSTRAINT students_email_uk UNIQUE (email),
	CONSTRAINT students_login_uk UNIQUE (login),
	CONSTRAINT students_pk PRIMARY KEY (student_id)
);
COMMENT ON TABLE students IS 'Участник тестирования';

-- Column comments

COMMENT ON COLUMN students.student_id IS 'Идетификатор';
COMMENT ON COLUMN students.login IS 'Логин';
COMMENT ON COLUMN students.full_name IS 'Полное имя';
COMMENT ON COLUMN students.email IS 'Эл.почта';
COMMENT ON COLUMN students.datebirth IS 'Дата рождения';
COMMENT ON COLUMN students.gender IS 'Пол: 0-не задан; 1-муж; 2-жен';


-- tests definition

-- Drop table

-- DROP TABLE tests;

create TABLE IF NOT EXISTS tests (
	test_id int4 NOT NULL GENERATED ALWAYS AS IDENTITY, -- Идентификатор тестирования
	student_id int4 NOT NULL, -- Участник тестирования
	date_start date NOT NULL, -- Дата и время начала тестирования
	date_finish date NULL, -- Дата и время окончания тестирования
	theme_id int4 NOT NULL, -- Тема теста
	CONSTRAINT tests_pk PRIMARY KEY (test_id),
	CONSTRAINT tests_student_fk FOREIGN KEY (student_id) REFERENCES students(student_id),
	CONSTRAINT tests_theme_fk FOREIGN KEY (theme_id) REFERENCES themes(theme_id)
);
COMMENT ON TABLE tests IS 'Тестирование';

-- Column comments

COMMENT ON COLUMN tests.test_id IS 'Идентификатор тестирования';
COMMENT ON COLUMN tests.student_id IS 'Участник тестирования';
COMMENT ON COLUMN tests.date_start IS 'Дата и время начала тестирования';
COMMENT ON COLUMN tests.date_finish IS 'Дата и время окончания тестирования';
COMMENT ON COLUMN tests.theme_id IS 'Тема теста';


-- stafftesting.testquestion definition

-- Drop table

-- DROP TABLE testquestion;

CREATE TABLE IF NOT EXISTS testquestion (
	testquestion_id int4 NOT NULL GENERATED ALWAYS AS IDENTITY, -- Идентификатор вопроса в тесте
	test_id int4 NOT NULL, -- Идентификатор теста
	question_id int4 NOT NULL, -- Идентификатор вопроса
	sign_right bool NOT NULL DEFAULT false, -- На вапрос дан правильный ответ
	CONSTRAINT testquestion_pk PRIMARY KEY (testquestion_id),
	CONSTRAINT testquestion_fk FOREIGN KEY (test_id) REFERENCES tests(test_id),
	CONSTRAINT testquestion_question_fk FOREIGN KEY (question_id) REFERENCES questions(question_id)
);
COMMENT ON TABLE testquestion IS 'Вопросы в тесте';

-- Column comments

COMMENT ON COLUMN testquestion.testquestion_id IS 'Идентификатор вопроса в тесте';
COMMENT ON COLUMN testquestion.test_id IS 'Идентификатор теста';
COMMENT ON COLUMN testquestion.question_id IS 'Идентификатор вопроса';
COMMENT ON COLUMN testquestion.sign_right IS 'На вапрос дан правильный ответ';